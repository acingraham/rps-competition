{"version":3,"sources":["logo.svg","entries.js","Results.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","entries","name","code","rand","Math","random","prev","rocks","totalScores","rock","papers","paper","total","scissors","ICONS","_ICONS","Object","defineProperty","getScore","roundScore","choice","lowercaseChoice","Results","_ref4","names","results","table","roundScores","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","row","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","roundChoices","_ref3","_ref2","slicedToArray","index","icon","score","sign","push","concat","err","return","unshift","buildTable","sort","r1","r2","tableHeader","toConsumableArray","range","length","react_default","a","createElement","react_flip_move_es","map","cell","key","initialState","App","state","cloneDeep","getTotalScores","prevTotals","round","playRound","_this$state","_this","entry","result","setState","objectSpread","play","roundsRemaining","arguments","setTimeout","reset","newState","_this2","this","className","onClick","src_Results","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.760f32a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const entries = [\r\n  {\r\n    name: 'Abbie',\r\n    code: function() {\r\n      return 'rock';\r\n    },\r\n  },\r\n  {\r\n    name: 'Andrew',\r\n    code: function() {\r\n      return 'paper';\r\n    },\r\n  },\r\n  {\r\n    name: 'Elizabeth',\r\n    code: function() {\r\n      const rand = Math.random();\r\n      if (rand < .33) {\r\n        return 'rock';\r\n      } else if (rand < .66) {\r\n        return 'paper';\r\n      } else {\r\n        return 'scissors';\r\n      }\r\n    },\r\n  },\r\n  {\r\n    name: 'Rohit',\r\n    code: function() {\r\n      return 'scissors';\r\n    },\r\n  },\r\n  {\r\n    name: 'Thomas',\r\n    code: function(prev) {\r\n      const rocks = prev.totalScores.rock;\r\n      const papers = prev.totalScores.paper;\r\n      const scissors = prev.totalScores.scissors;\r\n      const total = rocks + papers + scissors;\r\n      if (total === 0) {\r\n        return 'rock';\r\n      }\r\n      const rand = Math.random();\r\n      if (rand < rocks / total) {\r\n        return 'paper';\r\n      } else if (rand < ((rocks / total) + (papers / total))) {\r\n        return 'scissors';\r\n      } else {\r\n        return 'rock';\r\n      }\r\n    },\r\n  },\r\n];\r\n\r\nexport default entries;\r\n","import React from 'react';\r\nimport range from 'lodash/range';\r\nimport FlipMove from 'react-flip-move';\r\n\r\nconst ROCK = 'rock';\r\nconst PAPER = 'paper';\r\nconst SCISSORS = 'scissors';\r\n\r\nconst ICONS = {\r\n  [ROCK]: 'ðŸ¤˜',\r\n  [PAPER]: 'ðŸ“°',\r\n  [SCISSORS]: 'âœ‚',\r\n};\r\n\r\nconst getScore = (roundScore, choice) => {\r\n  const lowercaseChoice = choice;\r\n\r\n  if (lowercaseChoice === ROCK) {\r\n    return roundScore[SCISSORS] - roundScore[PAPER];\r\n  } else if (lowercaseChoice === PAPER) {\r\n    return roundScore[ROCK] - roundScore[SCISSORS];\r\n  } else if (choice === SCISSORS) {\r\n    return roundScore[PAPER] - roundScore[ROCK];\r\n  }\r\n\r\n  // TODO - Handle case where user provided invalid input\r\n};\r\n\r\nconst buildTable = (names, results) => {\r\n  const {roundScores} = results;\r\n  const table = [];\r\n  for (let name of names) {\r\n    const row = [];\r\n    let total = 0;\r\n    for (const [index, roundChoice] of results.roundChoices.entries()) {\r\n      const choice = roundChoice[name];\r\n      // TODO - Need to handle other casings and invalid entries\r\n      const icon = ICONS[choice];\r\n      const score = getScore(roundScores[index], choice);\r\n      total += score;\r\n      const sign = score > 0 ? '+' : '';\r\n      row.push(`${icon} (${sign}${score})`);\r\n    }\r\n    row.unshift(total);\r\n    row.unshift(name);\r\n    table.push(row);\r\n  }\r\n\r\n  return table;\r\n};\r\n\r\nconst Results = ({names, results}) => {\r\n  const table = buildTable(names, results);\r\n  table.sort((r1, r2) => r2[1] - r1[1]);\r\n\r\n  const tableHeader = ['Name', 'Total', ...range(1, 1 + results.roundChoices.length)];\r\n\r\n  return (\r\n    <FlipMove>\r\n      <thead>\r\n        <tr>\r\n          {\r\n            tableHeader.map(cell => <td>{cell}</td>)\r\n          }\r\n        </tr>\r\n      </thead>\r\n      {\r\n        table.map(row => (\r\n          <tr key={row[0]}>\r\n            {\r\n              row.map(cell => <td>{cell}</td>)\r\n            }\r\n            </tr>\r\n        ))\r\n      }\r\n    </FlipMove>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","import React, { Component } from 'react';\nimport cloneDeep from 'lodash/cloneDeep';\nimport logo from './logo.svg';\nimport './App.css';\nimport entries from './entries';\nimport Results from './Results';\n\nconst emptyObject = {\n  rock: 0,\n  paper: 0,\n  scissors: 0,\n};\n\nconst initialState = {\n  entries,\n  results: {\n    totalScores: {\n      rock: 0,\n      paper: 0,\n      scissors: 0,\n    },\n    roundScores: [],\n    roundChoices: [],\n  },\n};\n\nclass App extends Component {\n  state = cloneDeep(initialState);\n\n  getTotalScores = (prevTotals, round) => ({\n    rock: prevTotals.rock + round.rock,\n    scissors: prevTotals.scissors + round.scissors,\n    paper: prevTotals.paper + round.paper,\n  });\n\n  playRound = () => {\n    const {entries, results} = this.state;\n    const roundScores = {\n      rock: 0,\n      paper: 0,\n      scissors: 0,\n    };\n\n    const roundChoices = {};\n\n    for (const entry of entries) {\n      const result = entry.code(results);\n      // TODO - validate result is rock, paper, or scissors\n      roundChoices[entry.name] = result;\n      roundScores[result]++;\n    }\n\n    this.setState(state => ({\n      ...state,\n      results: {\n        totalScores: this.getTotalScores(state.results.totalScores, roundScores),\n        roundChoices: state.results.roundChoices.concat(roundChoices),\n        roundScores: state.results.roundScores.concat(roundScores),\n      },\n    }));\n  };\n\n  play = (roundsRemaining = 10) => {\n    if (roundsRemaining > 0) {\n      this.playRound();\n      setTimeout(() => this.play(roundsRemaining - 1), 1000);\n    }\n  };\n\n  reset = () => {\n    const newState = cloneDeep(initialState);\n    this.setState(newState);\n  };\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/*<button onClick={this.playRound}>Play Round</button>*/}\n        <button onClick={() => this.play()}>Play</button>\n        <button onClick={this.reset}>Reset</button>\n        <Results results={this.state.results} names={this.state.entries.map(entry => entry.name)} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}